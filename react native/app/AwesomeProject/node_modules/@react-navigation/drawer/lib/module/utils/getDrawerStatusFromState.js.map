{"version":3,"sources":["getDrawerStatusFromState.tsx"],"names":["getDrawerStatusFromState","state","history","Error","entry","find","it","type","status","default"],"mappings":"AAMA,eAAe,SAASA,wBAAT,CACbC,KADa,EAEC;AAAA;;AACd,MAAIA,KAAK,CAACC,OAAN,IAAiB,IAArB,EAA2B;AACzB,UAAM,IAAIC,KAAJ,CACJ,sGADI,CAAN;AAGD;;AAED,QAAMC,KAAK,GAAGH,KAAK,CAACC,OAAN,CAAcG,IAAd,CAAoBC,EAAD,IAAQA,EAAE,CAACC,IAAH,KAAY,QAAvC,CAAd;AAIA,kCAAOH,KAAP,aAAOA,KAAP,uBAAOA,KAAK,CAAEI,MAAd,yDAAwBP,KAAK,CAACQ,OAA9B,uCAAyC,QAAzC;AACD","sourcesContent":["import type {\n  DrawerNavigationState,\n  DrawerStatus,\n  ParamListBase,\n} from '@react-navigation/native';\n\nexport default function getDrawerStatusFromState(\n  state: DrawerNavigationState<ParamListBase>\n): DrawerStatus {\n  if (state.history == null) {\n    throw new Error(\n      \"Couldn't find the drawer status in the state object. Is it a valid state object of drawer navigator?\"\n    );\n  }\n\n  const entry = state.history.find((it) => it.type === 'drawer') as\n    | { type: 'drawer'; status: DrawerStatus }\n    | undefined;\n\n  return entry?.status ?? state.default ?? 'closed';\n}\n"]}